name: build & test
on:
  push:
      branches:
      - master
      - dev
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-latest
#           - windows-2016
#           - windows-latest
        llvm: [9,10]
        config:
          - Release
        include:
            - os: ubuntu-18.04
              cc: /usr/bin/gcc-9
              cxx: /usr/bin/g++-9
              llvm_dir: /usr/lib/llvm-
            - os: ubuntu-20.04
              cc: /usr/bin/gcc-9
              cxx: /usr/bin/g++-9
              llvm_dir: /usr/lib/llvm-
            - os: macos-latest
              cc: /usr/bin/clang
              cxx: /usr/bin/clang++
              llvm_dir: /usr/local/opt/llvm@
#           - os: windows-2016
#             cmake-generator: -G "Visual Studio 15 2017" -A x64
#           - os: windows-latest
#             cmake-generator: -G "Visual Studio 16 2019" -A x64
    steps:
      - uses: actions/checkout@v2

      - if: contains(matrix.os, 'ubuntu')
        name: deps-ubuntu
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt-get install libalsa-ocaml-dev libfl-dev libbison-dev libz-dev libsndfile-dev libopus-dev llvm-${{matrix.llvm}}-dev clang-10 gcc-9  libgtest-dev ninja-build
          sudo mkdir /usr/lib/llvm && sudo ln -s /usr/lib/llvm-10** /usr/lib/llvm
  
      - if: contains(matrix.os, 'ubuntu-18.04')
        name: deps-bison-latest-for-bionic
        run: |
          wget http://ftp.gnu.org/gnu/bison/bison-3.6.tar.gz
          tar -xzvf bison-3.6.tar.gz
          pushd bison-3.6 && ./configure --prefix=/usr && make && sudo make install && popd
      - if: contains(matrix.os, 'macos')
        name: deps-macos
        run: |
          brew upgrade
          brew install flex bison libsndfile ninja llvm@${{matrix.llvm}}
      - name: configure
        env:
          LLVM_DIR: ${{ matrix.llvm_dir }}${{ matrix.llvm}}/lib/cmake
        run:
          mkdir build && cd build && cmake ${{ matrix.cmake-generator }}-DCMAKE_BUILD_CONFIG=${{ matrix.config }} -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -G Ninja ..

      - name: build
        run: cmake --build build --config ${{ matrix.config }}

      - name: test
        run: cd build && ctest --build-config ${{ matrix.config }}
