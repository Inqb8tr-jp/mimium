name: build & test
on:
  push:
      branches:
      - master
      - dev
  pull_request:

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      lastmessage: ${{ steps.checkmessage.outputs.lastmessage }}
    steps: 
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - if: contains(github.event_name, 'pull_request')      
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - if: "!contains(github.event_name, 'pull_request')"  
        uses: actions/checkout@v2
      - id: checkmessage
        run: |
          git log --no-merges -1 --oneline
          echo "::set-output name=lastmessage::$(git log --no-merges -1 --oneline)"

  build:
    needs: prebuild
    if: "!contains( needs.prebuild.outputs.lastmessage , '[ci skip]')"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-latest
          - windows-latest
        config:
          - Release

        include:
            - os: ubuntu-18.04
              shell: bash
              cc: /usr/bin/gcc-9
              cxx: /usr/bin/g++-9
            - os: ubuntu-20.04
              shell: bash
              cc: /usr/bin/gcc-9
              cxx: /usr/bin/g++-9
            - os: macos-latest
              shell: bash
              cc: /usr/bin/clang
              cxx: /usr/bin/clang++
            - os: windows-latest
              shell: msys2 {0}
              cc: gcc
              cxx: g++
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v2
      - if: contains(matrix.os, 'windows')
        name: setup-windows
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: base-devel cmake git gcc mingw64/mingw-w64-x86_64-llvm mingw64/mingw-w64-x86_64-libsndfile mingw64/mingw-w64-x86_64-opus mingw64/mingw-w64-x86_64-ninja
      - if: ${{contains(matrix.os, 'macos')||contains(matrix.os, 'ubuntu') }}
        name: deps-homebrew
        run: |
          brew upgrade
          brew install flex bison libsndfile llvm@10 ninja
      - if: contains(matrix.os, 'ubuntu')
        run: brew install gcc@9 alsa-lib
      - name: configure
        run:
          cmake . -Bbuild -GNinja -DCMAKE_BUILD_CONFIG=${{ matrix.config }} -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} 
      - name: build
        run: cmake --build build -j

      - name: test
        run: cd build && ctest
