name: build & test
on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-latest
#           - windows-2016
#           - windows-latest
        config:
          - Release
        include:
            - os: ubuntu-18.04
              llvm_dir: /usr/lib/llvm-10/lib/cmake
            - os: ubuntu-20.04
              llvm_dir: /usr/lib/llvm-10/lib/cmake
            - os: macos-latest
              llvm_dir: /usr/local/opt/llvm/lib/cmake
#           - os: windows-2016
#             cmake-generator: -G "Visual Studio 15 2017" -A x64
#           - os: windows-latest
#             cmake-generator: -G "Visual Studio 16 2019" -A x64

    steps:
      - uses: actions/checkout@v2

      - if: contains(matrix.os, 'ubuntu')
        name: deps-ubuntu
        run: |
          sudo apt update
          sudo apt-get install libalsa-ocaml-dev libfl-dev libbison-dev libz-dev libsndfile-dev libopus-dev llvm-10

      - if: contains(matrix.os, 'ubuntu-18.04')
        name: deps-bison-latest-for-bionic
        run: |
          wget http://ftp.gnu.org/gnu/bison/bison-3.6.tar.gz
          tar -xzvf bison-3.6.tar.gz
          pushd bison-3.6 && ./configure --prefix=/usr && make && sudo make install && popd
      - if: contains(matrix.os, 'macos')
        name: deps-macos
        run: |
          brew update
          brew install flex bison libsndfile llvm

      - name: configure
        env:
          LLVM_DIR: ${{ matrix.llvm_dir }}
        run:
          mkdir build && cd build && cmake ${{ matrix.cmake-generator }} -DCMAKE_BUILD_CONFIG=${{ matrix.config }} -DCMAKE_FIND_DEBUG_MODE=1 ..

      - name: build
        run: cmake --build build --config ${{ matrix.config }}

      - name: test
        run: cd build && ctest --build-config ${{ matrix.config }}
